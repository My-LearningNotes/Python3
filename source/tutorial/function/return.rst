函数返回值
==========

在Python中, 用\ ``def``\ 语句创建函数时, 可以用\ ``return``\ 语句指定函数的返回值, 该返回值可以是任意类型. 
需要注意的是, ``return``\ 语句在同一函数中可以出现多次, 但只要有一个得到执行, 就会直接结束函数的执行.

.. code-block:: python
    :emphasize-lines: 1

    return [value]

返回值可以指定, 也可以省略不写(默认返回\ ``None``).

如果函数没有定义\ ``return``\ 语句, Python会自动在末尾加上\ ``return None``\ , 所以函数的返回值就是\ ``None``\ .


函数返回多个值
--------------

通常情况下, 一个函数只有一个返回值, 
实际上Python也是如此, 只不过Python函数能以返回列表或元组的方式, 将要返回的多个值保存到序列中, 从而间接实现返回多个值的目的.

在Python中, 函数返回多个值, 有以下两种方式:

    *   在函数中, 提前将要返回的多个值存储到一个列表或元组中, 然后函数返回该列表或元组;
    *   函数直接返回多个值, 值之间用逗号\ ``,``\ 分隔, Python会自动将多个值封装到一个元组中, 其返回值是一个元组.

对于有多个返回值的Python函数, 我们可以利用Python的序列解包功能, 将其赋值给多个变量.

Example:

.. code-block:: python

    def func():
        List = ['hello', 'world', 1, 2]
        return List

    a, b, c, d = func()
    print(a, b, c, d)

    输出结果为:
    hello world 1 2

