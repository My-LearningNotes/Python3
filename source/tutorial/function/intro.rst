函数简介
========

Python中有提供一些内置函数, 如\ ``input()``\ , ``print()``\ , ``range()``\ , ``len()``\ 等, 可以直接使用.
除了直接使用内置函数之外, 还可以自定义函数.


函数的定义
----------

定义函数使用\ ``def``\ 关键字实现, 具体的语法格式如下:

.. code-block:: python

    def functionName(paramList):
        code-block
        [return [value]]

*   ``funtionName``
  
函数名, 其实就是一个符合Python语法的标识符. 函数名最好能够做到"见名知意".

*   ``paramList``

形参列表, 设置该函数可以接收多少个参数, 多个参数之间用逗号\ ``,``\ 分隔.

.. note::

    在定义函数时, 即使函数不需要参数, 函数名后面的\ ``()``\ 也不可省略.

*   ``[return [value]]``

整体作为函数的可选参数, 用于设置函数的返回值.
一个函数, 可以用返回值, 也可以没有返回值, 根据实际情况而定.

.. note::

    在Python中, 所有的函数都有返回值, 如果没有显式指定返回值, 则函数默认返回\ ``None``\ .


函数的调用
----------

函数调用的基本语法格式如下:

.. code-block:: python

    [返回值 = ]函数名([参数值])

.. note::

    定义函数时有多少个形参, 那么调用时就需要传入多少个, 且顺序必须和创建函数时一致.
    即便该函数没有参数, 函数名后的小括号也不能省略.

    
为函数提供说明文档
------------------

要给函数编写文档, 以确保其他人能够理解, 可添加注释(以\ ``#``\ 开头的内容).

还可以给函数编写\ **文档字符串(docstring)**\ , 文档字符串定义在函数的开头(\ ``def``\ 语句的下一行).

函数的文档字符串作为函数的一部分存储起来, 可以通过\ ``__doc__``\ 属性获取文档字符串.

在交互式解释器中, 可以使用内置的\ ``help()``\ 函数, 获取有关函数的信息, 其中包括函数的文档字符串.

